#!/usr/bin/env python
from pycookiecheat import chrome_cookies
import secretstorage
from urllib.error import URLError
import os
import sys
import tempfile
# import requests

# using pycookiecheat functions curl cookie
# def boolToString(s: bool) -> str:
#     if s:
#         return "TRUE"
#     else:
#         return "FALSE"
#
# def checkTailMatch(s):
#     if s[0] == ".":
#         return "TRUE"
#     return "FALSE"
#
# def toNescapeCookies(cookies) -> str:
#     cookie_text = "# Netscape HTTP Cookie File\n# https://curl.haxx.se/docs/http-cookies.html\n# This file was generated by libcurl! Edit at your own risk.\n\n"
#
#     if "httpOnly" in cookies:
#         cookie_text+="#HttpOnly_\n"
#     # cookies["domain"] + '\t' + checkTailMatch(cookies["domain"]) + '\t' + cookies["path"] + '\t' + boolToString(cookies["secure"]) +
#     for k, v in cookies:
#         print( '\t' + "0" + '\t' + k + '\t' + v + '\n')
#     # cookie_text+=cookies["domain"] + '\t' + checkTailMatch(cookies["domain"]) + '\t' + cookies["path"] + '\t' + boolToString(cookies["secure"]) + '\t' + "0" + '\t' + cookies["name"] + '\t' + cookies["value"] + '\n'
#     return cookie_text


# Uses Chrome's default cookies filepath by default
def getCurlCookie(url: str) ->  str:
    try:
        bus = secretstorage.dbus_init()
        collection = secretstorage.get_default_collection(bus)
        for item in collection.get_all_items():
            if item.get_label() == 'Chrome Safe Storage':
                MY_PASS = item.get_secret()
                tempDir = tempfile.TemporaryDirectory()
                tempFp = os.path.join(tempDir.name, "cookie.txt")
                chrome_cookies(url, curl_cookie_file=tempFp, password=MY_PASS)
                with open(tempFp, 'r') as f:
                    cookieText = f.read()
                tempDir.cleanup()
                return(cookieText)
        else:
            raise Exception('Chrome password not found!')
    except URLError:
        print(f"Invalid url: {url}") 
        return ""

if __name__=='__main__':
    if len(sys.argv)!=2:
        print("Please use syntax main.py <url> <path to save curl file> ")
        raise Exception("Invalid argumensts")
    
    url=sys.argv[1]
    cookie=getCurlCookie(url)
    print(cookie)

