#!/usr/bin/env python
from pycookiecheat import chrome_cookies
import secretstorage
from urllib.error import URLError
import sys
import requests

def boolToString(s: bool) -> str:
    if s:
        return "TRUE"
    else:
        return "FALSE"

def checkTailMatch(s):
    if s[0] == ".":
        return "TRUE"
    return "FALSE"

def dictToNescapeCookies(cookies: dict) -> str:
    cookie_text = "# Netscape HTTP Cookie File\n# https://curl.haxx.se/docs/http-cookies.html\n# This file was generated by chromecookies! Edit at your own risk.\n\n"

    for x in cookies:
        if x["httpOnly"]:
            cookie_text+="#HttpOnly_"
        cookie_text+=x["domain"] + '\t' + checkTailMatch(x["domain"]) + '\t' + x["path"] + '\t' + boolToString(x["secure"]) + '\t' + "0" + '\t' + x["name"] + '\t' + x["value"] + '\n'
    return cookie_text


# Uses Chrome's default cookies filepath by default
def getCookie(url):
    try:
        bus = secretstorage.dbus_init()
        collection = secretstorage.get_default_collection(bus)
        for item in collection.get_all_items():
            if item.get_label() == 'Chrome Safe Storage':
                MY_PASS = item.get_secret()
                cookies = chrome_cookies(url, password=MY_PASS)
                return(cookies)
        else:
            raise Exception('Chrome password not found!')
    except URLError:
        print(f"Invalid url: {url}") 

if __name__=='__main__':
    if len(sys.argv)!=2:
        print("Please use syntax main.py <url>")
        raise Exception("Invalid argumensts")

    cookie=getCookie(sys.argv[1])
    print(cookie)

